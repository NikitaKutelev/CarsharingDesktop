# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import pythonKurs.grpc_services.user_service.user_service_pb2 as user__service__pb2


class UserServiceStub(object):
    """Интерфейс UserService
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterUser = channel.unary_unary(
                '/user_service.UserService/RegisterUser',
                request_serializer=user__service__pb2.RegisterRequest.SerializeToString,
                response_deserializer=user__service__pb2.GeneralResponse.FromString,
                )
        self.Login = channel.unary_unary(
                '/user_service.UserService/Login',
                request_serializer=user__service__pb2.LoginRequest.SerializeToString,
                response_deserializer=user__service__pb2.LoginResponse.FromString,
                )
        self.UpdateUserDetails = channel.unary_unary(
                '/user_service.UserService/UpdateUserDetails',
                request_serializer=user__service__pb2.UpdateUserDetailsRequest.SerializeToString,
                response_deserializer=user__service__pb2.GeneralResponse.FromString,
                )
        self.ApproveUser = channel.unary_unary(
                '/user_service.UserService/ApproveUser',
                request_serializer=user__service__pb2.ApproveUserRequest.SerializeToString,
                response_deserializer=user__service__pb2.GeneralResponse.FromString,
                )
        self.DeleteUser = channel.unary_unary(
                '/user_service.UserService/DeleteUser',
                request_serializer=user__service__pb2.DeleteUserRequest.SerializeToString,
                response_deserializer=user__service__pb2.GeneralResponse.FromString,
                )
        self.GetUserDetails = channel.unary_unary(
                '/user_service.UserService/GetUserDetails',
                request_serializer=user__service__pb2.GetUserDetailsRequest.SerializeToString,
                response_deserializer=user__service__pb2.GetUserDetailsResponse.FromString,
                )
        self.IsUserRdy = channel.unary_unary(
                '/user_service.UserService/IsUserRdy',
                request_serializer=user__service__pb2.IsUserRdyRequest.SerializeToString,
                response_deserializer=user__service__pb2.IsUserRdyResponse.FromString,
                )


class UserServiceServicer(object):
    """Интерфейс UserService
    """

    def RegisterUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUserDetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ApproveUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserDetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsUserRdy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterUser': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterUser,
                    request_deserializer=user__service__pb2.RegisterRequest.FromString,
                    response_serializer=user__service__pb2.GeneralResponse.SerializeToString,
            ),
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=user__service__pb2.LoginRequest.FromString,
                    response_serializer=user__service__pb2.LoginResponse.SerializeToString,
            ),
            'UpdateUserDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUserDetails,
                    request_deserializer=user__service__pb2.UpdateUserDetailsRequest.FromString,
                    response_serializer=user__service__pb2.GeneralResponse.SerializeToString,
            ),
            'ApproveUser': grpc.unary_unary_rpc_method_handler(
                    servicer.ApproveUser,
                    request_deserializer=user__service__pb2.ApproveUserRequest.FromString,
                    response_serializer=user__service__pb2.GeneralResponse.SerializeToString,
            ),
            'DeleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser,
                    request_deserializer=user__service__pb2.DeleteUserRequest.FromString,
                    response_serializer=user__service__pb2.GeneralResponse.SerializeToString,
            ),
            'GetUserDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserDetails,
                    request_deserializer=user__service__pb2.GetUserDetailsRequest.FromString,
                    response_serializer=user__service__pb2.GetUserDetailsResponse.SerializeToString,
            ),
            'IsUserRdy': grpc.unary_unary_rpc_method_handler(
                    servicer.IsUserRdy,
                    request_deserializer=user__service__pb2.IsUserRdyRequest.FromString,
                    response_serializer=user__service__pb2.IsUserRdyResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'user_service.UserService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserService(object):
    """Интерфейс UserService
    """

    @staticmethod
    def RegisterUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user_service.UserService/RegisterUser',
            user__service__pb2.RegisterRequest.SerializeToString,
            user__service__pb2.GeneralResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user_service.UserService/Login',
            user__service__pb2.LoginRequest.SerializeToString,
            user__service__pb2.LoginResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUserDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user_service.UserService/UpdateUserDetails',
            user__service__pb2.UpdateUserDetailsRequest.SerializeToString,
            user__service__pb2.GeneralResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ApproveUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user_service.UserService/ApproveUser',
            user__service__pb2.ApproveUserRequest.SerializeToString,
            user__service__pb2.GeneralResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user_service.UserService/DeleteUser',
            user__service__pb2.DeleteUserRequest.SerializeToString,
            user__service__pb2.GeneralResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user_service.UserService/GetUserDetails',
            user__service__pb2.GetUserDetailsRequest.SerializeToString,
            user__service__pb2.GetUserDetailsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IsUserRdy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user_service.UserService/IsUserRdy',
            user__service__pb2.IsUserRdyRequest.SerializeToString,
            user__service__pb2.IsUserRdyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
